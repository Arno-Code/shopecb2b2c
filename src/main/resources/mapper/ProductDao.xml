<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.ProductDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.Product">
    	<result column="id" property="id" />
    	<result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="attribute_value0" property="attributeValue0" />
        <result column="attribute_value1" property="attributeValue1" />
        <result column="attribute_value10" property="attributeValue10" />
        <result column="attribute_value11" property="attributeValue11" />
        <result column="attribute_value12" property="attributeValue12" />
        <result column="attribute_value13" property="attributeValue13" />
        <result column="attribute_value14" property="attributeValue14" />
        <result column="attribute_value15" property="attributeValue15" />
        <result column="attribute_value16" property="attributeValue16" />
        <result column="attribute_value17" property="attributeValue17" />
        <result column="attribute_value18" property="attributeValue18" />
        <result column="attribute_value19" property="attributeValue19" />
        <result column="attribute_value2" property="attributeValue2" />
        <result column="attribute_value3" property="attributeValue3" />
        <result column="attribute_value4" property="attributeValue4" />
        <result column="attribute_value5" property="attributeValue5" />
        <result column="attribute_value6" property="attributeValue6" />
        <result column="attribute_value7" property="attributeValue7" />
        <result column="attribute_value8" property="attributeValue8" />
        <result column="attribute_value9" property="attributeValue9" />
        <result column="caption" property="caption" />
        <result column="cost" property="cost" />
        <result column="hits" property="hits" />
        <result column="image" property="image" />
        <result column="introduction" property="introduction" />
        <result column="is_active" property="isActive" />
        <result column="is_delivery" property="isDelivery" />
        <result column="is_list" property="isList" />
        <result column="is_marketable" property="isMarketable" />
        <result column="is_top" property="isTop" />
        <result column="keyword" property="keyword" />
        <result column="market_price" property="marketPrice" />
        <result column="memo" property="memo" />
        <result column="month_hits" property="monthHits" />
        <result column="month_hits_date" property="monthHitsDate" />
        <result column="month_sales" property="monthSales" />
        <result column="month_sales_date" property="monthSalesDate" />
        <result column="name" property="name" />
        <result column="price" property="price" />
        <result column="sales" property="sales" />
        <result column="score" property="score" />
        <result column="score_count" property="scoreCount" />
        <result column="sn" property="sn" />
        <result column="total_score" property="totalScore" />
        <result column="type" property="type" />
        <result column="unit" property="unit" />
        <result column="week_hits" property="weekHits" />
        <result column="week_hits_date" property="weekHitsDate" />
        <result column="week_sales" property="weekSales" />
        <result column="week_sales_date" property="weekSalesDate" />
        <result column="weight" property="weight" />
        <result column="parameter_values" property="parameterValues" jdbcType="LONGVARCHAR"
				javaType="java.util.ArrayList" typeHandler="net.shopec.handlers.ParameterValueHandler"/>
		<result column="product_images" property="productImages" jdbcType="LONGVARCHAR"
				javaType="java.util.ArrayList" typeHandler="net.shopec.handlers.ProductImageHandler" />
		<result column="specification_items" property="specificationItems" jdbcType="LONGVARCHAR"
				javaType="java.util.ArrayList" typeHandler="net.shopec.handlers.SpecificationItemHandler"/>
		<association property="store" select="net.shopec.dao.StoreDao.find" column="store_id" javaType="net.shopec.entity.Store" />
		<association property="productCategory" select="net.shopec.dao.ProductCategoryDao.find" column="product_category_id"  javaType="net.shopec.entity.ProductCategory" />
		<association property="storeProductCategory" select="net.shopec.dao.StoreProductCategoryDao.find" column="store_product_category_id" javaType="net.shopec.entity.StoreProductCategory"  />
		<association property="brand" select="net.shopec.dao.BrandDao.find" column="brand_id"  javaType="net.shopec.entity.Brand" />
        <collection property="promotions" select="net.shopec.dao.PromotionDao.findSet" column="{attributeName=product_id, attributeValue=id}" ofType="net.shopec.entity.Promotion" />
        <collection property="productTags" select="net.shopec.dao.ProductTagDao.findSet" column="{attributeValue=id}" ofType="net.shopec.entity.ProductTag" />
        <collection property="storeProductTags" select="net.shopec.dao.StoreProductTagDao.findSet" column="{attributeName=product_id, attributeValue=id}" ofType="net.shopec.entity.StoreProductTag" />
        <collection property="reviews" select="net.shopec.dao.ReviewDao.findSet" column="{attributeName=product_id, attributeValue=id}" ofType="net.shopec.entity.Review" />
		<collection property="consultations" select="net.shopec.dao.ConsultationDao.findSet" column="{attributeName=product_id, attributeValue=id}" ofType="net.shopec.entity.Consultation" />
		<collection property="productFavorites" select="net.shopec.dao.ProductFavoriteDao.findSet" column="{attributeName=product_id, attributeValue=id}" ofType="net.shopec.entity.ProductFavorite" />
		<collection property="skus" select="net.shopec.dao.SkuDao.findSet" column="{attributeName=product_id, attributeValue=id}" ofType="net.shopec.entity.Sku" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	product.id, product.version, product.created_date, product.last_modified_date, attribute_value0, attribute_value1, attribute_value10, attribute_value11, attribute_value12, attribute_value13, attribute_value14, attribute_value15, attribute_value16, attribute_value17, attribute_value18, attribute_value19, attribute_value2, attribute_value3, attribute_value4, attribute_value5, attribute_value6, attribute_value7, attribute_value8, attribute_value9, caption, cost, hits, image, product.introduction, is_active, is_delivery, is_list, is_marketable, is_top, product.keyword, market_price, memo, month_hits, month_hits_date, month_sales, month_sales_date, product.name, parameter_values, price, product_images, sales, score, score_count, sn, specification_items, total_score, product.type, unit, week_hits, week_hits_date, week_sales, week_sales_date, weight, brand_id, product_category_id, store_id, store_product_category_id, 'product_id'
    </sql>
    
    <!-- 查找实体对象 -->
	<select id="find" parameterType="Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
		WHERE
			id = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultType="net.shopec.entity.Product">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
		<if test="attributeName == 'promotion_id'">
			LEFT JOIN `product_promotion` ON id = products_id
			WHERE
				promotions_id = #{attributeValue}
		</if>
		<if test="attributeName == 'product_tag_id'">
			LEFT JOIN `product_product_tag` ON id = products_id
			WHERE
				product_tags_id = #{attributeValue}
		</if>
		<if test="attributeName == 'store_product_tag_id'">
			LEFT JOIN `product_store_product_tag` ON id = products_id
			WHERE
				store_product_tags_id = #{attributeValue}
		</if>
		<if test="attributeName == 'store_id' or attributeName == 'brand_id' or attributeName == 'store_product_category_id' or attributeName == 'product_category_id'">
			WHERE
				${attributeName} = #{attributeValue}
		</if>
	</select>
	
	<!-- 查找所有实体对象集合 -->
	<select id="findAll" resultType="Product">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
	</select>
	
	<!-- 查找商品 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
		<where>
			<if test="type != null">
				product.type = #{type.ordinal}
			</if>
			<if test="store != null">
				store_id = #{store.id}
			</if>
			<if test="productCategory != null">
				AND product_category_id IN (SELECT id FROM product_category WHERE id = #{productCategory.id} OR tree_path LIKE concat('%,',#{productCategory.id},',%')) 
			</if>
			<if test="storeProductCategory != null">
				AND store_product_category_id IN (SELECT id FROM store_product_category WHERE id = #{storeProductCategory.id} OR tree_path LIKE concat('%,',#{storeProductCategory.id},',%'))
			</if>
			<if test="brand != null">
				AND brand_id = #{brand.id}
			</if>
			<if test="promotion != null">
				AND id IN (SELECT products_id FROM product_promotion WHERE promotions_id = #{promotion.id})
			</if>
			<if test="productTag != null">
				AND id IN (SELECT products_id FROM product_product_tag WHERE product_tags_id = #{productTag.id})
			</if>
			<if test="storeProductTag != null">
				AND id IN (SELECT products_id FROM product_store_product_tag WHERE store_product_tags_id = #{storeProductTag.id})
			</if>
			<if test="startPrice != null and startPrice >= 0">
				AND price <![CDATA[ >= ]]> #{startPrice}
			</if>
			<if test="endPrice != null and endPrice >= 0">
				AND price <![CDATA[ <= ]]> #{endPrice}
			</if>
			<if test="isMarketable != null">
				AND is_marketable = #{isMarketable}
			</if>
			<if test="isList != null">
				AND is_list = #{isList}
			</if>
			<if test="isTop != null">
				AND is_top = #{isTop}
			</if>
			<if test="isActive != null">
				AND is_active = #{isActive}
			</if>
			<if test="isOutOfStock != null">
				<if test="isOutOfStock == true">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ <= ]]> allocated_stock)
				</if>
				<if test="isOutOfStock == false">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ > ]]> allocated_stock)
				</if>
			</if>
			<if test="isStockAlert != null">
				<if test="isStockAlert == true">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ <= ]]> allocated_stock + 5)
				</if>
				<if test="isStockAlert == false">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ > ]]> allocated_stock + 5)
				</if>
			</if>
			<if test="hasPromotion != null">
				AND id IN (SELECT products_id FROM product_promotion WHERE promotions_id = #{promotion.id})
			</if>
			<if test="orderType != null">
				<choose>
					<when test="orderType.name == 'topDesc'">
						ORDER BY is_top DESC
					</when>
					<when test="orderType.name == 'priceAsc'">
						ORDER BY price ASC
					</when>
					<when test="orderType.name == 'priceDesc'">
						ORDER BY price DESC
					</when>
					<when test="orderType.name == 'salesDesc'">
						ORDER BY sales DESC
					</when>
					<when test="orderType.name == 'scoreDesc'">
						ORDER BY score DESC
					</when>
					<when test="orderType.name == 'dateDesc'">
						ORDER BY created_date DESC
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 根据分类查找商品 -->
	<select id="findByCategoryList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
		<where>
			<if test="productCategory != null">
				AND product_category_id IN (SELECT id FROM product_category WHERE id = #{productCategory.id} OR tree_path LIKE concat('%,',#{productCategory.id},',%')) 
			</if>
			<if test="storeProductCategory != null">
				AND store_product_category_id IN (SELECT id FROM store_product_category WHERE id = #{storeProductCategory.id} OR tree_path LIKE concat('%,',#{storeProductCategory.id},',%'))
			</if>
			<if test="isMarketable != null">
				AND is_marketable = #{isMarketable}
			</if>
			<if test="isActive != null">
				AND is_active = #{isActive}
			</if>
			<if test="beginDate != null">
				AND created_date <![CDATA[ >= ]]> #{beginDate}
			</if>
			<if test="endDate != null"> 
				AND created_date <![CDATA[ <= ]]> #{endDate}
			</if>
			<if test="first != null and count != null">
				LIMIT ${first}, ${count}
			</if>
		</where>
	</select>
	
	<!-- 排名类型查找商品 -->
	<select id="findByRankingTypeList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
		<where>
			<if test="store != null">
				AND	store_id = #{store.id}
			</if>
			<if test="rankingType != null">
				<choose>
					<when test="rankingType.name == 'score'">
						ORDER BY score , score_count DESC
					</when>
					<when test="rankingType.name == 'scoreCount'">
						ORDER BY score_count , score DESC
					</when>
					<when test="rankingType.name == 'weekHits'">
						ORDER BY week_hits DESC
					</when>
					<when test="rankingType.name == 'monthHits'">
						ORDER BY month_hits DESC
					</when>
					<when test="rankingType.name == 'hits'">
						ORDER BY hits DESC
					</when>
					<when test="rankingType.name == 'weekSales'">
						ORDER BY week_sales DESC
					</when>
					<when test="rankingType.name == 'monthSales'">
						ORDER BY month_sales DESC
					</when>
					<when test="rankingType.name == 'sales'">
						ORDER BY sales DESC
					</when>
				</choose>
			</if>
			<if test="count != null">
				LIMIT 0, ${count}
			</if>
		</where>
	</select>
	
	<!-- 查找商品分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`product` product
		LEFT JOIN store store ON product.`store_id` = store.id
		WHERE 1 = 1
			<if test="type != null">
				AND product.type = #{type.ordinal}
			</if>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="productCategory != null">
				AND product_category_id IN (SELECT id FROM product_category WHERE id = #{productCategory.id} OR tree_path LIKE concat('%,',#{productCategory.id},',%')) 
			</if>
			<if test="storeProductCategory != null">
				AND store_product_category_id IN (SELECT id FROM store_product_category WHERE id = #{storeProductCategory.id} OR tree_path LIKE concat('%,',#{storeProductCategory.id},',%'))
			</if>
			<if test="brand != null">
				AND brand_id = #{brand.id}
			</if>
			<if test="promotion != null">
				AND id IN (SELECT products_id FROM product_promotion WHERE promotions_id = #{promotion.id})
			</if>
			<if test="productTag != null">
				AND id IN (SELECT products_id FROM product_product_tag WHERE product_tags_id = #{productTag.id})
			</if>
			<if test="storeProductTag != null">
				AND id IN (SELECT products_id FROM product_store_product_tag WHERE store_product_tags_id = #{storeProductTag.id})
			</if>
			<if test="startPrice != null and startPrice >= 0">
				AND price <![CDATA[ >= ]]> #{startPrice}
			</if>
			<if test="endPrice != null and endPrice >= 0">
				AND price <![CDATA[ <= ]]> #{endPrice}
			</if>
			<if test="isMarketable != null">
				AND is_marketable = #{isMarketable}
			</if>
			<if test="isList != null">
				AND is_list = #{isList}
			</if>
			<if test="isTop != null">
				AND is_top = #{isTop}
			</if>
			<if test="isActive != null">
				AND is_active = #{isActive}
			</if>
			<if test="isOutOfStock != null">
				<if test="isOutOfStock == true">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ <= ]]> allocated_stock)
				</if>
				<if test="isOutOfStock == false">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ > ]]> allocated_stock)
				</if>
			</if>
			<if test="isStockAlert != null">
				<if test="isStockAlert == true">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ <= ]]> allocated_stock + 5)
				</if>
				<if test="isStockAlert == false">
					AND id IN (SELECT product_id FROM sku WHERE product_id = product.id AND stock <![CDATA[ > ]]> allocated_stock + 5)
				</if>
			</if>
			<if test="hasPromotion != null">
				AND id IN (SELECT products_id FROM product_promotion WHERE promotions_id = #{promotion.id})
			</if>
			<if test="orderType != null">
				<choose>
					<when test="orderType.name == 'topDesc'">
						ORDER BY is_top DESC
					</when>
					<when test="orderType.name == 'priceAsc'">
						ORDER BY price ASC
					</when>
					<when test="orderType.name == 'priceDesc'">
						ORDER BY price DESC
					</when>
					<when test="orderType.name == 'salesDesc'">
						ORDER BY sales DESC
					</when>
					<when test="orderType.name == 'scoreDesc'">
						ORDER BY score DESC
					</when>
					<when test="orderType.name == 'dateDesc'">
						ORDER BY created_date DESC
					</when>
				</choose>
			</if>

		${ew.sqlSegment}
	</select>
	
	<!-- 清除商品属性值 -->
	<update id="clearAttributeValue">
		UPDATE product SET ${propertyName} = NULL WHERE id = #{attribute.productCategory.id}
	</update>
	
	<!-- 刷新过期店铺商品有效状态 -->
	<update id="refreshExpiredStoreProductActive">
		UPDATE product SET is_active = FALSE WHERE is_active = TRUE AND store_id IN(SELECT id FROM store WHERE end_date IS NULL OR end_date <![CDATA[ <= ]]> NOW())
	</update>
	
	<!-- 刷新商品有效状态 -->
	<update id="refreshActive">
	
		<!-- 设置商品有效状态 -->
		<if test="store != null">
			UPDATE `product` product
			SET product.is_active = TRUE
			WHERE
				product.is_active = FALSE
			AND product.store_id = #{store.id}
			AND product.store_id IN(
				SELECT
					id
				FROM
					`store` store
				WHERE
					store.is_enabled = TRUE
				AND store.`status` = 3
				AND store.end_date IS NOT NULL
				AND store.end_date <![CDATA[ > ]]> NOW()
			)
			AND product.product_category_id IN(
				SELECT
					productCategory.id
				FROM
					`product_category` productCategory
				LEFT JOIN `product_category_store` productCategoryStore ON productCategory.id = productCategoryStore.product_categories_id
				WHERE
					productCategoryStore.stores_id = product.`store_id`
			);
		</if>
		
		<!-- 设置商品无效状态 -->
		<if test="store != null">
			UPDATE `product` product
				SET product.is_active = FALSE
				WHERE
					product.is_active = TRUE
				AND product.store_id = #{store.id}
				AND product.store_id IN(
					SELECT
						id
					FROM
						`store` store
					WHERE
						store.is_enabled != TRUE
					AND store.`status` != 3
					AND store.end_date IS NULL
					AND store.end_date <![CDATA[ <= ]]> NOW()
				)
				AND product.product_category_id NOT IN(
					SELECT
						productCategory.id
					FROM
						`product_category` productCategory
					LEFT JOIN `product_category_store` productCategoryStore ON productCategory.id = productCategoryStore.product_categories_id
					WHERE
						productCategoryStore.stores_id = product.`store_id`
				);
		</if>
	</update>
	
	<!-- 查询商品数量 -->
	<select id="count" resultType="long">
		SELECT
			count(1)
		FROM 
			`product` p
		<where>
			<if test="type != null">
				AND product.type = #{type.ordinal}
			</if>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="isMarketable != null">
				AND is_marketable = #{isMarketable}
			</if>
			<if test="isList != null">
				AND is_list != #{isList}
			</if>
			<if test="isTop != null">
				AND is_top = #{isTop}
			</if>
			<if test="isActive != null">
				AND is_active = #{isActive}
			</if>
			<if test="isOutOfStock != null">
				<if test="isOutOfStock == true">
					AND id IN (SELECT id FROM sku WHERE product_id = p.id AND stock <![CDATA[ <= ]]> allocated_stock)
				</if>
				<if test="isOutOfStock == false">
					AND id IN (SELECT id FROM sku WHERE product_id = p.id AND stock <![CDATA[ > ]]> allocated_stock)
				</if>
			</if>
			<if test="isStockAlert != null">
				<if test="isStockAlert == true">
					AND id IN (SELECT id FROM sku WHERE product_id = p.id AND stock <![CDATA[ <= ]]> allocated_stock + 5)
				</if>
				<if test="isStockAlert == false">
					AND id IN (SELECT id FROM sku WHERE product_id = p.id AND stock <![CDATA[ > ]]> allocated_stock + 5)
				</if>
			</if>
		</where>
	</select>
	
	<!-- 判断是否存在 -->
	<select id="exists" resultType="boolean">
		SELECT
			COUNT(1)
		FROM
			`product`
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.Product">
    	INSERT INTO product(
			id ,
			created_date ,
			version ,
			attribute_value0 ,
			attribute_value1 ,
			attribute_value10 ,
			attribute_value11 ,
			attribute_value12 ,
			attribute_value13 ,
			attribute_value14 ,
			attribute_value15 ,
			attribute_value16 ,
			attribute_value17 ,
			attribute_value18 ,
			attribute_value19 ,
			attribute_value2 ,
			attribute_value3 ,
			attribute_value4 ,
			attribute_value5 ,
			attribute_value6 ,
			attribute_value7 ,
			attribute_value8 ,
			attribute_value9 ,
			caption ,
			cost ,
			hits ,
			image ,
			is_active ,
			is_delivery ,
			is_list ,
			is_marketable ,
			is_top ,
			keyword ,
			market_price ,
			memo ,
			month_hits ,
			month_hits_date ,
			month_sales ,
			month_sales_date ,
			NAME ,
			price ,
			sales ,
			score ,
			score_count ,
			sn ,
			total_score ,
			type ,
			unit ,
			week_hits ,
			week_hits_date ,
			week_sales ,
			week_sales_date ,
			weight ,
			brand_id ,
			product_category_id ,
			store_id ,
			store_product_category_id ,
			introduction ,
			parameter_values ,
			product_images ,
			specification_items
		)
		VALUES (
			#{entity.id}, 
			NOW(), 
			0, 
			#{entity.attributeValue0}, 
			#{entity.attributeValue1}, 
			#{entity.attributeValue10}, 
			#{entity.attributeValue11}, 
			#{entity.attributeValue12}, 
			#{entity.attributeValue13}, 
			#{entity.attributeValue14}, 
			#{entity.attributeValue15}, 
			#{entity.attributeValue16}, 
			#{entity.attributeValue17}, 
			#{entity.attributeValue18}, 
			#{entity.attributeValue19}, 
			#{entity.attributeValue2}, 
			#{entity.attributeValue3}, 
			#{entity.attributeValue4}, 
			#{entity.attributeValue5}, 
			#{entity.attributeValue6}, 
			#{entity.attributeValue7}, 
			#{entity.attributeValue8}, 
			#{entity.attributeValue9}, 
			#{entity.caption}, 
			#{entity.cost}, 
			#{entity.hits}, 
			#{entity.image}, 
			#{entity.isActive}, 
			#{entity.isDelivery}, 
			#{entity.isList}, 
			#{entity.isMarketable}, 
			#{entity.isTop}, 
			#{entity.keyword}, 
			#{entity.marketPrice}, 
			#{entity.memo}, 
			#{entity.monthHits}, 
			#{entity.monthHitsDate}, 
			#{entity.monthSales}, 
			#{entity.monthSalesDate}, 
			#{entity.name}, 
			#{entity.price}, 
			#{entity.sales}, 
			#{entity.score}, 
			#{entity.scoreCount}, 
			#{entity.sn}, 
			#{entity.totalScore}, 
			#{entity.type}, 
			#{entity.unit}, 
			#{entity.weekHits}, 
			#{entity.weekHitsDate}, 
			#{entity.weekSales}, 
			#{entity.weekSalesDate}, 
			#{entity.weight}, 
			#{entity.brand.id}, 
			#{entity.productCategory.id}, 
			#{entity.store.id}, 
			#{entity.storeProductCategory.id}, 
			#{entity.introduction}, 
			#{entity.parameterValues, typeHandler=net.shopec.handlers.ParameterValueHandler}, 
			#{entity.productImages, typeHandler=net.shopec.handlers.ProductImageHandler}, 
			#{entity.specificationItems, typeHandler=net.shopec.handlers.SpecificationItemHandler}
		)
  	</insert>
  
	<!-- 更新 -->
	<update id="update" parameterType="net.shopec.entity.Product">
	    UPDATE product
	    <set>
	        last_modified_date = NOW(),
	      <if test="entity.version != null">
	        version = #{entity.version} + 1,
	      </if>
	      <if test="entity.attributeValue0 != null">
	        attribute_value0 = #{entity.attributeValue0},
	      </if>
	      <if test="entity.attributeValue1 != null">
	        attribute_value1 = #{entity.attributeValue1},
	      </if>
	      <if test="entity.attributeValue10 != null">
	        attribute_value10 = #{entity.attributeValue10},
	      </if>
	      <if test="entity.attributeValue11 != null">
	        attribute_value11 = #{entity.attributeValue11},
	      </if>
	      <if test="entity.attributeValue12 != null">
	        attribute_value12 = #{entity.attributeValue12},
	      </if>
	      <if test="entity.attributeValue13 != null">
	        attribute_value13 = #{entity.attributeValue13},
	      </if>
	      <if test="entity.attributeValue14 != null">
	        attribute_value14 = #{entity.attributeValue14},
	      </if>
	      <if test="entity.attributeValue15 != null">
	        attribute_value15 = #{entity.attributeValue15},
	      </if>
	      <if test="entity.attributeValue16 != null">
	        attribute_value16 = #{entity.attributeValue16},
	      </if>
	      <if test="entity.attributeValue17 != null">
	        attribute_value17 = #{entity.attributeValue17},
	      </if>
	      <if test="entity.attributeValue18 != null">
	        attribute_value18 = #{entity.attributeValue18},
	      </if>
	      <if test="entity.attributeValue19 != null">
	        attribute_value19 = #{entity.attributeValue19},
	      </if>
	      <if test="entity.attributeValue2 != null">
	        attribute_value2 = #{entity.attributeValue2},
	      </if>
	      <if test="entity.attributeValue3 != null">
	        attribute_value3 = #{entity.attributeValue3},
	      </if>
	      <if test="entity.attributeValue4 != null">
	        attribute_value4 = #{entity.attributeValue4},
	      </if>
	      <if test="entity.attributeValue5 != null">
	        attribute_value5 = #{entity.attributeValue5},
	      </if>
	      <if test="entity.attributeValue6 != null">
	        attribute_value6 = #{entity.attributeValue6},
	      </if>
	      <if test="entity.attributeValue7 != null">
	        attribute_value7 = #{entity.attributeValue7},
	      </if>
	      <if test="entity.attributeValue8 != null">
	        attribute_value8 = #{entity.attributeValue8},
	      </if>
	      <if test="entity.attributeValue9 != null">
	        attribute_value9 = #{entity.attributeValue9},
	      </if>
	      <if test="entity.caption != null">
	        caption = #{entity.caption},
	      </if>
	      <if test="entity.cost != null">
	        cost = #{entity.cost},
	      </if>
	      <if test="entity.hits != null">
	        hits = #{entity.hits},
	      </if>
	      <if test="entity.image != null">
	        image = #{entity.image},
	      </if>
	      <if test="entity.isActive != null">
	        is_active = #{entity.isActive},
	      </if>
	      <if test="entity.isDelivery != null">
	        is_delivery = #{entity.isDelivery},
	      </if>
	      <if test="entity.isList != null">
	        is_list = #{entity.isList},
	      </if>
	      <if test="entity.isMarketable != null">
	        is_marketable = #{entity.isMarketable},
	      </if>
	      <if test="entity.isTop != null">
	        is_top = #{entity.isTop},
	      </if>
	      <if test="entity.keyword != null">
	        keyword = #{entity.keyword},
	      </if>
	      <if test="entity.marketPrice != null">
	        market_price = #{entity.marketPrice},
	      </if>
	      <if test="entity.memo != null">
	        memo = #{entity.memo},
	      </if>
	      <if test="entity.monthHits != null">
	        month_hits = #{entity.monthHits},
	      </if>
	      <if test="entity.monthHitsDate != null">
	        month_hits_date = #{entity.monthHitsDate},
	      </if>
	      <if test="entity.monthSales != null">
	        month_sales = #{entity.monthSales},
	      </if>
	      <if test="entity.monthSalesDate != null">
	        month_sales_date = #{entity.monthSalesDate},
	      </if>
	      <if test="entity.name != null">
	        name = #{entity.name},
	      </if>
	      <if test="entity.price != null">
	        price = #{entity.price},
	      </if>
	      <if test="entity.sales != null">
	        sales = #{entity.sales},
	      </if>
	      <if test="entity.score != null">
	        score = #{entity.score},
	      </if>
	      <if test="entity.scoreCount != null">
	        score_count = #{entity.scoreCount},
	      </if>
	      <if test="entity.sn != null">
	        sn = #{entity.sn},
	      </if>
	      <if test="entity.totalScore != null">
	        total_score = #{entity.totalScore},
	      </if>
	      <if test="entity.type != null">
	        type = #{entity.type},
	      </if>
	      <if test="entity.unit != null">
	        unit = #{entity.unit},
	      </if>
	      <if test="entity.weekHits != null">
	        week_hits = #{entity.weekHits},
	      </if>
	      <if test="entity.weekHitsDate != null">
	        week_hits_date = #{entity.weekHitsDate},
	      </if>
	      <if test="entity.weekSales != null">
	        week_sales = #{entity.weekSales},
	      </if>
	      <if test="entity.weekSalesDate != null">
	        week_sales_date = #{entity.weekSalesDate},
	      </if>
	      <if test="entity.weight != null">
	        weight = #{entity.weight},
	      </if>
	      <if test="entity.brand != null">
	        brand_id = #{entity.brand.id},
	      </if>
	      <if test="entity.productCategory != null">
	        product_category_id = #{entity.productCategory.id},
	      </if>
	      <if test="entity.storeProductCategory != null">
	        store_product_category_id = #{entity.storeProductCategory.id},
	      </if>
	      <if test="entity.introduction != null">
	        introduction = #{entity.introduction},
	      </if>
	      <if test="entity.parameterValues != null">
	        parameter_values = #{entity.parameterValues, typeHandler=net.shopec.handlers.ParameterValueHandler},
	      </if>
	      <if test="entity.productImages != null">
	        product_images = #{entity.productImages, typeHandler=net.shopec.handlers.ProductImageHandler},
	      </if>
	      <if test="entity.specificationItems != null">
	        specification_items = #{entity.specificationItems, typeHandler=net.shopec.handlers.SpecificationItemHandler},
	      </if>
	    </set>
	    WHERE id = #{entity.id}
	    AND version = #{entity.version}
  	</update>
</mapper>
