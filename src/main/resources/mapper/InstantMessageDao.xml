<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.InstantMessageDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.InstantMessage">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="orders" property="order" />
        <result column="account" property="account" />
        <result column="name" property="name" />
        <result column="type" property="type" />
        <association property="store" select="net.shopec.dao.StoreDao.find" column="store_id" javaType="net.shopec.entity.Store" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	id, version, created_date, last_modified_date, orders, account, name, type, store_id
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			instant_message
		WHERE
			id = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			instant_message
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找评论分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			instant_message
		<where>
		  <if test="store">
		  	AND store_id = #{store.id}
		  </if>
		   ${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.InstantMessage">
    	INSERT INTO instant_message(
			id ,
			created_date ,
			version ,
			orders ,
			account ,
			name ,
			type ,
			store_id
		)
		VALUES (
			#{entity.id}, 
			#{entity.createdDate},
			#{entity.version}, 
			#{entity.order}, 
			#{entity.account}, 
			#{entity.name}, 
			#{entity.type}, 
			#{entity.store.id}
		)
  	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="net.shopec.entity.InstantMessage">
   		UPDATE instant_message
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			orders = #{entity.order},
			account = #{entity.account},
			`name` = #{entity.name},
			`type` = #{entity.type},
			store_id = #{entity.store.id}
		WHERE
			id = #{entity.id}
	  	AND version = #{entity.version}
  	</update>
  
</mapper>
