<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.ArticleDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.Article">
    	<result column="id" property="id" />
    	<result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="author" property="author" />
        <result column="content" property="content" />
        <result column="hits" property="hits" />
        <result column="is_publication" property="isPublication" />
        <result column="is_top" property="isTop" />
        <result column="seo_description" property="seoDescription" />
        <result column="seo_keywords" property="seoKeywords" />
        <result column="seo_title" property="seoTitle" />
        <result column="title" property="title" />
        <association property="articleCategory" select="net.shopec.dao.ArticleCategoryDao.find" column="article_category_id"  javaType="net.shopec.entity.ArticleCategory" fetchType="lazy"/>
        <collection property="articleTags" select="net.shopec.dao.ArticleTagDao.findSet" column="{attributeValue=id}" ofType="net.shopec.entity.ArticleTag" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	id, version, created_date, last_modified_date, author, content, hits, is_publication, is_top, seo_description, seo_keywords, seo_title, title, article_category_id
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`article` 
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`article`
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 查找所有实体对象集合 -->
	<select id="findAll" resultType="Article">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`article`
	</select>
	
	<!-- 查找文章 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`article`
		<where>
			<if test="articleCategory != null">
				AND article_category_id IN (SELECT id FROM `article_category` WHERE id = #{articleCategory.id} OR tree_path LIKE concat('%,',#{articleCategory.id},',%')) 
			</if>
			<if test="articleTag != null">
				AND id IN (SELECT id FROM `article` LEFT JOIN `article_article_tag` ON id = articles_id WHERE article_tags_id = #{articleTag.id})
			</if>
			<if test="isPublication != null">
				AND is_publication = #{isPublication}
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 查找文章分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`article`
		<where>
			<if test="articleCategory != null">
				AND article_category_id IN (SELECT id FROM `article_category` WHERE id = #{articleCategory.id} OR tree_path LIKE concat('%,',#{articleCategory.id},',%')) 
			</if>
			<if test="articleTag != null">
				AND id IN (SELECT id FROM `article` LEFT JOIN `article_article_tag` ON id = articles_id WHERE article_tags_id = #{articleTag.id})
			</if>
			<if test="isPublication != null">
				AND is_publication = #{isPublication}
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.Article">
   		INSERT INTO article(
			id ,
			created_date ,
			version ,
			author ,
			hits ,
			is_publication ,
			is_top ,
			seo_description ,
			seo_keywords ,
			seo_title ,
			title ,
			article_category_id ,
			content
		)
		VALUES (
			#{entity.id}, 
			#{entity.createdDate}, 
			#{entity.version}, 
			#{entity.author}, 
			#{entity.hits}, 
			#{entity.isPublication}, 
			#{entity.isTop}, 
			#{entity.seoDescription}, 
			#{entity.seoKeywords}, 
			#{entity.seoTitle}, 
			#{entity.title}, 
			#{entity.articleCategory.id}, 
			#{entity.content}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="net.shopec.entity.Article">
    	UPDATE article
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			author = #{entity.author},
			hits = #{entity.hits},
			is_publication = #{entity.isPublication},
			is_top = #{entity.isTop},
			seo_description = #{entity.seoDescription},
			seo_keywords = #{entity.seoKeywords},
			seo_title = #{entity.seoTitle},
			title = #{entity.title},
			article_category_id = #{entity.articleCategory.id},
			content = #{entity.content}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>
  	
</mapper>
