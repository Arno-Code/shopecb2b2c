<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.CouponDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.Coupon">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="begin_date" property="beginDate" />
        <result column="end_date" property="endDate" />
        <result column="introduction" property="introduction" />
        <result column="is_enabled" property="isEnabled" />
        <result column="is_exchange" property="isExchange" />
        <result column="maximum_price" property="maximumPrice" />
        <result column="maximum_quantity" property="maximumQuantity" />
        <result column="minimum_price" property="minimumPrice" />
        <result column="minimum_quantity" property="minimumQuantity" />
        <result column="name" property="name" />
        <result column="point" property="point" />
        <result column="prefix" property="prefix" />
        <result column="price_expression" property="priceExpression" />
        <association property="store" select="net.shopec.dao.StoreDao.find" column="store_id" javaType="net.shopec.entity.Store" fetchType="lazy"/>
        <collection property="couponCodes" select="net.shopec.dao.CouponCodeDao.findSet" column="{attributeName=coupon_id, attributeValue=id}" ofType="net.shopec.entity.CouponCode" fetchType="lazy"/>
        <collection property="promotions" select="net.shopec.dao.PromotionDao.findSet" column="{attributeName=coupon_id, attributeValue=id}" ofType="net.shopec.entity.Promotion" fetchType="lazy"/>
        <collection property="orders" select="net.shopec.dao.OrderDao.findSet" column="{attributeName=coupon_id, attributeValue=id}" ofType="net.shopec.entity.Order" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	id, version, created_date, last_modified_date, begin_date, end_date, introduction, is_enabled, is_exchange, maximum_price, maximum_quantity, minimum_price, minimum_quantity, name, point, prefix, price_expression, store_id, 'coupon_id'
    </sql>

	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			coupon
		WHERE 
			id = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`coupon`
		<if test="attributeName == 'promotion_id'">
			LEFT JOIN `promotion_coupon` ON id = coupons_id
			WHERE
				promotions_id = #{attributeValue}
		</if>
		<if test="attributeName == 'orders'">
			LEFT JOIN `orders_coupon` ON id = coupons_id
			WHERE
				orders_id = #{attributeValue}
		</if>
		<if test="attributeName == 'store_id'">
			WHERE
				${attributeName} = #{attributeValue}
		</if>
	</select>
	
	<!-- 查找优惠券 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			coupon
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="isEnabled != null">
				AND is_enabled = #{isEnabled}
			</if>
			<if test="isExchange != null">
				AND is_exchange = #{isExchange}
			</if>
			<if test="hasExpired == true">
				AND end_date IS NOT NULL AND end_date <![CDATA[ <= ]]> NOW()
			</if>
			<if test="hasExpired == false">
				AND end_date IS NULL AND end_date <![CDATA[ > ]]> NOW()
			</if>
		</where>
	</select>
	
	<!-- 查找优惠券分页 -->
	<select id="selectPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			coupon
		<where>
			<if test="isEnabled != null">
				AND is_enabled = #{isEnabled}
			</if>
			<if test="isExchange != null">
				AND is_exchange = #{isExchange}
			</if>
			<if test="hasExpired != null">
				<if test="hasExpired == true">
					AND end_date IS NOT NULL AND end_date <![CDATA[ <= ]]> NOW()
				</if>
				<if test="hasExpired == false">
					AND end_date IS NULL AND end_date <![CDATA[ > ]]> NOW()
				</if>
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 查找优惠券分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			coupon
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.Coupon">
    	INSERT INTO coupon (
			id ,
			created_date ,
			version ,
			begin_date ,
			end_date ,
			is_enabled ,
			is_exchange ,
			maximum_price ,
			maximum_quantity ,
			minimum_price ,
			minimum_quantity ,
			name ,
			point ,
			prefix ,
			price_expression ,
			store_id ,
			introduction
		)
		VALUES (
			#{entity.id}, 
			#{entity.createdDate},
			#{entity.version}, 
			#{entity.beginDate}, 
			#{entity.endDate}, 
			#{entity.isEnabled}, 
			#{entity.isExchange}, 
			#{entity.maximumPrice}, 
			#{entity.maximumQuantity}, 
			#{entity.minimumPrice}, 
			#{entity.minimumQuantity}, 
			#{entity.name}, 
			#{entity.point}, 
			#{entity.prefix}, 
			#{entity.priceExpression}, 
			#{entity.store.id}, 
			#{entity.introduction}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="net.shopec.entity.Coupon">
   		UPDATE coupon
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			begin_date = #{entity.beginDate},
			end_date = #{entity.endDate},
			is_enabled = #{entity.isEnabled},
			is_exchange = #{entity.isExchange},
			maximum_price = #{entity.maximumPrice},
			maximum_quantity = #{entity.maximumQuantity},
			minimum_price = #{entity.minimumPrice},
			minimum_quantity = #{entity.minimumQuantity},
			`name` = #{entity.name},
			point = #{entity.point},
			`prefix` = #{entity.prefix},
			price_expression = #{entity.priceExpression}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>
  
</mapper>
