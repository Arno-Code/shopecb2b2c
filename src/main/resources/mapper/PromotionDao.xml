<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.PromotionDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.Promotion">
    	<result column="id" property="id" />
    	<result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="orders" property="order" />
        <result column="begin_date" property="beginDate" />
        <result column="conditions_amount" property="conditionsAmount" />
        <result column="conditions_number" property="conditionsNumber" />
        <result column="credit_amount" property="creditAmount" />
        <result column="credit_number" property="creditNumber" />
        <result column="discount" property="discount" />
        <result column="end_date" property="endDate" />
        <result column="image" property="image" />
        <result column="introduction" property="introduction" />
        <result column="is_coupon_allowed" property="isCouponAllowed" />
        <result column="is_enabled" property="isEnabled" />
        <result column="is_free_shipping" property="isFreeShipping" />
        <result column="maximum_price" property="maximumPrice" />
        <result column="maximum_quantity" property="maximumQuantity" />
        <result column="minimum_price" property="minimumPrice" />
        <result column="minimum_quantity" property="minimumQuantity" />
        <result column="name" property="name" />
        <result column="price_expression" property="priceExpression" />
        <result column="title" property="title" />
        <result column="type" property="type" />
        <association property="store" select="net.shopec.dao.StoreDao.find" column="store_id" javaType="net.shopec.entity.Store" fetchType="lazy"/>
        <collection property="memberRanks" select="net.shopec.dao.MemberRankDao.findSet" column="{attributeName=promotion_id, attributeValue=id}" ofType="net.shopec.entity.MemberRank" fetchType="lazy"/>
        <collection property="coupons" select="net.shopec.dao.CouponDao.findSet" column="{attributeName=promotion_id, attributeValue=id}" ofType="net.shopec.entity.Coupon" fetchType="lazy"/>
        <collection property="gifts" select="net.shopec.dao.SkuDao.findSet" column="{attributeName=promotion_id, attributeValue=id}" ofType="net.shopec.entity.Sku" fetchType="lazy"/>
        <collection property="products" select="net.shopec.dao.ProductDao.findSet" column="{attributeName=promotion_id, attributeValue=id}" ofType="net.shopec.entity.Product" fetchType="lazy"/>
        <collection property="productCategories" select="net.shopec.dao.ProductCategoryDao.findSet" column="{attributeName=promotion_id, attributeValue=id}" ofType="net.shopec.entity.ProductCategory" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	id, version, created_date, last_modified_date, orders, begin_date, conditions_amount, conditions_number, credit_amount, credit_number, discount, end_date, image, introduction, is_coupon_allowed, is_enabled, is_free_shipping, maximum_price, maximum_quantity, minimum_price, minimum_quantity, name, price_expression, title, type, store_id, 'promotion_id'
    </sql>
	
	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`promotion`
		WHERE
			id = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultType="net.shopec.entity.Promotion">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`promotion`
		<if test="attributeName == 'product_category_id'">
			LEFT JOIN `product_category_promotion` ON id = promotions_id
			WHERE
				product_categories_id = #{attributeValue}
		</if>
		<if test="attributeName == 'product_id'">
			LEFT JOIN `product_promotion` ON id = promotions_id
			WHERE
				products_id = #{attributeValue}
		</if>
		<if test="attributeName == 'coupon_id'">
			LEFT JOIN `promotion_coupon` ON id = promotions_id
			WHERE
				coupons_id = #{attributeValue}
		</if>
		<if test="attributeName == 'member_rank_id'">
			LEFT JOIN `promotion_member_rank` ON id = promotions_id
			WHERE
				member_ranks_id = #{attributeValue}
		</if>
		<if test="attributeName == 'sku_id'">
			LEFT JOIN `promotion_sku` ON id = gift_promotions_id
			WHERE
				gifts_id = #{attributeValue}
		</if>
		<if test="attributeName == 'store_id'">
			WHERE
				${attributeName} = #{attributeValue}
		</if>
	</select>
	
	<!-- 查找所有实体对象集合 -->
	<select id="findAll" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`promotion` 
	</select>
	
	<!-- 查找促销 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`promotion`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="type != null">
				AND type = #{type.ordinal}
			</if>
			<if test="isEnabled != null">
				AND is_enabled = #{isEnabled}
			</if>
		</where>
	</select>
	
	<!-- 查找促销 -->
	<select id="selectList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`promotion`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="type != null">
				AND type = #{type.ordinal}
			</if>
			<if test="memberRank != null">
				AND id IN (SELECT id FROM `promotion` LEFT JOIN `promotion_member_rank` ON promotions_id = id WHERE member_ranks_id = #{memberRank.id})
			</if>
			<if test="productCategory != null">
				AND id IN (SELECT id FROM `promotion` LEFT JOIN `product_category_promotion` ON promotions_id = id WHERE product_categories_id = #{productCategory.id})
			</if>
			<if test="hasBegun != null">
				<if test="hasBegun == true">
					AND (begin_date IS NULL OR begin_date <![CDATA[ <= ]]> NOW())
				</if>
				<if test="hasBegun == false">
					AND (begin_date IS NOT NULL) AND begin_date <![CDATA[ > ]]> NOW()
				</if>
			</if>
			<if test="hasEnded != null">	
				<if test="hasEnded == true">
					AND (end_date IS NOT NULL) AND end_date <![CDATA[ <= ]]> NOW()
				</if>
				<if test="hasEnded == false">
					AND (begin_date IS NULL OR end_date <![CDATA[ > ]]> NOW())
				</if>
			</if>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 查找促销 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`promotion`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="type != null">
				AND type = #{type.ordinal}
			</if>
			 ${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.Promotion">
    	INSERT INTO promotion(
			id ,
			created_date ,
			version ,
			orders ,
			begin_date ,
			conditions_amount ,
			conditions_number ,
			credit_amount ,
			credit_number ,
			discount ,
			end_date ,
			image ,
			is_coupon_allowed ,
			is_enabled ,
			is_free_shipping ,
			maximum_price ,
			maximum_quantity ,
			minimum_price ,
			minimum_quantity ,
			name ,
			price_expression ,
			title ,
			type ,
			store_id ,
			introduction
		)
		VALUES (
			#{entity.id}, 
			#{entity.createdDate},
			#{entity.version}, 
			#{entity.order}, 
			#{entity.beginDate}, 
			#{entity.conditionsAmount}, 
			#{entity.conditionsNumber}, 
			#{entity.creditAmount}, 
			#{entity.creditNumber}, 
			#{entity.discount}, 
			#{entity.endDate}, 
			#{entity.image}, 
			#{entity.isCouponAllowed},
			#{entity.isEnabled}, 
			#{entity.isFreeShipping}, 
			#{entity.maximumPrice}, 
			#{entity.maximumQuantity}, 
			#{entity.minimumPrice}, 
			#{entity.minimumQuantity}, 
			#{entity.name}, 
			#{entity.priceExpression}, 
			#{entity.title}, 
			#{entity.type}, 
			#{entity.store.id}, 
			#{entity.introduction}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="net.shopec.entity.Promotion">
    	UPDATE promotion
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			orders = #{entity.order},
			begin_date = #{entity.beginDate},
			conditions_amount = #{entity.conditionsAmount},
			conditions_number = #{entity.conditionsNumber},
			credit_amount = #{entity.creditAmount},
			credit_number = #{entity.creditNumber},
			discount = #{entity.discount},
			end_date = #{entity.endDate},
			image = #{entity.image},
			is_coupon_allowed = #{entity.isCouponAllowed},
			is_enabled = #{entity.isEnabled},
			is_free_shipping = #{entity.isFreeShipping},
			maximum_price = #{entity.maximumPrice},
			maximum_quantity = #{entity.maximumQuantity},
			minimum_price = #{entity.minimumPrice},
			minimum_quantity = #{entity.minimumQuantity},
			name = #{entity.name},
			price_expression = #{entity.priceExpression},
			title = #{entity.title},
			type = #{entity.type},
			store_id = #{entity.store.id}
		WHERE id = #{entity.id}
		AND version = #{entity.version}
 	</update>
 	
</mapper>
