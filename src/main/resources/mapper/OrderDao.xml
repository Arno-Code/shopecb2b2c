<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.OrderDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.Order">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="address" property="address" />
        <result column="amount" property="amount" />
        <result column="amount_paid" property="amountPaid" />
        <result column="area_name" property="areaName" />
        <result column="complete_date" property="completeDate" />
        <result column="consignee" property="consignee" />
        <result column="coupon_discount" property="couponDiscount" />
        <result column="exchange_point" property="exchangePoint" />
        <result column="expire" property="expire" />
        <result column="fee" property="fee" />
        <result column="freight" property="freight" />
        <result column="is_allocated_stock" property="isAllocatedStock" />
        <result column="is_exchange_point" property="isExchangePoint" />
        <result column="is_use_coupon_code" property="isUseCouponCode" />
        <result column="memo" property="memo" />
        <result column="offset_amount" property="offsetAmount" />
        <result column="payment_method_name" property="paymentMethodName" />
        <result column="payment_method_type" property="paymentMethodType" />
        <result column="phone" property="phone" />
        <result column="price" property="price" />
        <result column="promotion_discount" property="promotionDiscount" />
        <result column="promotion_names" property="promotionNames" jdbcType="LONGVARCHAR"
				javaType="java.util.ArrayList" typeHandler="net.shopec.handlers.MyListTypeHandler"/>
        <result column="quantity" property="quantity" />
        <result column="refund_amount" property="refundAmount" />
        <result column="returned_quantity" property="returnedQuantity" />
        <result column="reward_point" property="rewardPoint" />
        <result column="shipped_quantity" property="shippedQuantity" />
        <result column="shipping_method_name" property="shippingMethodName" />
        <result column="sn" property="sn" />
        <result column="status" property="status" />
        <result column="tax" property="tax" />
        <result column="type" property="type" />
        <result column="weight" property="weight" />
        <result column="zip_code" property="zipCode" />
        <association property="area" select="net.shopec.dao.AreaDao.find" column="area_id" javaType="net.shopec.entity.Area" fetchType="lazy"/>
        <association property="paymentMethod" select="net.shopec.dao.PaymentMethodDao.find" column="payment_method_id" javaType="net.shopec.entity.PaymentMethod" fetchType="lazy"/>
        <association property="shippingMethod" select="net.shopec.dao.ShippingMethodDao.find" column="shipping_method_id" javaType="net.shopec.entity.ShippingMethod" fetchType="lazy"/>
        <association property="member" select="net.shopec.dao.MemberDao.find" column="member_id" javaType="net.shopec.entity.Member" fetchType="lazy"/>
        <association property="couponCode" select="net.shopec.dao.CouponCodeDao.find" column="coupon_code_id" javaType="net.shopec.entity.CouponCode" fetchType="lazy"/>
        <association property="store" select="net.shopec.dao.StoreDao.find" column="store_id" javaType="net.shopec.entity.Store" fetchType="lazy"/>
        <collection property="coupons" select="net.shopec.dao.CouponDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.Coupon" fetchType="lazy"/>
        <collection property="orderItems" select="net.shopec.dao.OrderItemDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.OrderItem" fetchType="lazy"/>
        <collection property="paymentTransactions" select="net.shopec.dao.PaymentTransactionDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.PaymentTransaction" fetchType="lazy"/>
        <collection property="orderPayments" select="net.shopec.dao.OrderPaymentDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.OrderPayment" fetchType="lazy"/>
        <collection property="orderRefunds" select="net.shopec.dao.OrderRefundsDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.OrderRefunds" fetchType="lazy"/>
        <collection property="orderShippings" select="net.shopec.dao.OrderShippingDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.OrderShipping" fetchType="lazy"/>
        <collection property="orderReturns" select="net.shopec.dao.OrderReturnsDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.OrderReturns" fetchType="lazy"/>
        <collection property="orderLogs" select="net.shopec.dao.OrderLogDao.findSet" column="{attributeName=orders, attributeValue=id}" ofType="net.shopec.entity.OrderLog" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	id, version, created_date, last_modified_date, address, amount, amount_paid, area_name, complete_date, consignee, coupon_discount, exchange_point, expire, fee, freight, invoice_content, invoice_title, is_allocated_stock, is_exchange_point, is_use_coupon_code, memo, offset_amount, payment_method_name, payment_method_type, phone, price, promotion_discount, promotion_names, quantity, refund_amount, returned_quantity, reward_point, shipped_quantity, shipping_method_name, sn, `status`, tax, type, weight, zip_code, area_id, coupon_code_id, member_id, payment_method_id, shipping_method_id, store_id, 'orders'
    </sql>

	<!-- 查找实体对象 -->
	<select id="find" parameterType="java.lang.Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM 
			`orders`
		WHERE
			`id` = #{id}
	</select>
	
	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`orders`
		WHERE
			${attributeName} = #{attributeValue}
	</select>
	
	<!-- 根据属性查找实体对象 -->
	<select id="findByAttribute" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`orders`
		WHERE
			${attributeName } = #{attributeValue}
	</select>
	
	<!-- 查找订单 -->
	<select id="findList" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM 
			`orders` t
		<where>
		  <if test="type != null">
		  	 AND t.type = #{type.ordinal}
		  </if>
		  <if test="status != null">
		  	 AND t.status = #{status.ordinal}
		  </if>
		  <if test="store != null">
		  	 AND t.store_id = #{store.id}
		  </if>
		  <if test="member != null">
		  	 AND t.member_id = #{member.id}
		  </if>
		  <if test="product != null">
		  	 AND EXISTS (SELECT 1 FROM `order_item` orderItem WHERE orderItem.order_id = t.id AND orderItem.sku_id IN (SELECT sku.id FROM `sku` sku WHERE sku.product_id = #{product.id}))
		  </if>
		  <if test="isPendingReceive != null">
				<if test="isPendingReceive == true">
					AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW()) 
					AND payment_method_type = 1
					AND status NOT IN (5, 6, 7, 8)
					AND amount_paid <![CDATA[ < ]]> amount 
				</if>
				<if test="isPendingReceive == false">
					AND NOT (AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW()) 
					AND payment_method_type = 1
					AND status NOT IN (5, 6, 7, 8)
					AND amount_paid <![CDATA[ < ]]> amount) 
				</if>
			</if>
			<if test="isPendingRefunds != null">
				<if test="isPendingRefunds == true">
					AND (
							(
								(
									expire IS NULL
									OR expire <![CDATA[ <= ]]> NOW()
									OR `status` IN (6 , 7 , 8)
								)
								AND amount_paid <![CDATA[ > ]]> amount
							)
							OR(`status` = 5 AND amount_paid <![CDATA[ > ]]> amount)
						)
				</if>
				<if test="isPendingRefunds == false">
					AND NOT (
								(
									(
										expire IS NULL
										OR expire <![CDATA[ <= ]]> NOW()
										OR `status` IN (6 , 7 , 8)
									)
									AND amount_paid <![CDATA[ > ]]> amount
								)
								OR(`status` = 5 AND amount_paid <![CDATA[ > ]]> amount)
							)
				</if>
			</if>
			<if test="isUseCouponCode != null">
				AND is_use_coupon_code = #{isUseCouponCode}
			</if>
			<if test="isExchangePoint != null">
				AND is_exchange_point = #{isExchangePoint}
			</if>
			<if test="isAllocatedStock != null">
				AND is_allocated_stock = #{isAllocatedStock}
			</if>
			<if test="hasExpired != null">
				<if test="hasExpired == true">
					 AND expire IS NOT NULL AND expire <![CDATA[ <= ]]> NOW()
				</if>
				<if test="hasExpired == false">
					AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW())
				</if>
			</if>
		</where>
	</select>
	
	<!-- 查找订单分页 -->
	<select id="findPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM 
			`orders` t
		WHERE 1 = 1
		<if test="type != null">
			 AND t.type = #{type.ordinal}
		</if>
		<if test="status != null">
			 AND t.status = #{status.ordinal}
		</if>
		<if test="store != null">
			 AND t.store_id = #{store.id}
		</if>
		<if test="member != null">
			 AND t.member_id = #{member.id}
		</if>
		<if test="product != null">
			 AND EXISTS (SELECT 1 FROM `order_item` orderItem WHERE orderItem.order_id = t.id AND orderItem.sku_id IN (SELECT sku.id FROM `sku` sku WHERE sku.product_id = #{product.id}))
		</if>
		<if test="isPendingReceive != null">
			<if test="isPendingReceive == true">
				AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW())
				AND payment_method_type = 1
				AND status NOT IN (5, 6, 7, 8)
				AND amount_paid <![CDATA[ < ]]> amount
			</if>
			<if test="isPendingReceive == false">
				AND NOT (AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW())
				AND payment_method_type = 1
				AND status NOT IN (5, 6, 7, 8)
				AND amount_paid <![CDATA[ < ]]> amount)
			</if>
		</if>
		<if test="isPendingRefunds != null">
			<if test="isPendingRefunds == true">
				AND (
						(
							(
								expire IS NULL
								OR expire <![CDATA[ <= ]]> NOW()
								OR `status` IN (6 , 7 , 8)
							)
							AND amount_paid <![CDATA[ > ]]> amount
						)
						OR(`status` = 5 AND amount_paid <![CDATA[ > ]]> amount)
					)
			</if>
			<if test="isPendingRefunds == false">
				AND NOT (
							(
								(
									expire IS NULL
									OR expire <![CDATA[ <= ]]> NOW()
									OR `status` IN (6 , 7 , 8)
								)
								AND amount_paid <![CDATA[ > ]]> amount
							)
							OR(`status` = 5 AND amount_paid <![CDATA[ > ]]> amount)
						)
			</if>
		</if>
		<if test="isUseCouponCode != null">
			AND is_use_coupon_code = #{isUseCouponCode}
		</if>
		<if test="isExchangePoint != null">
			AND is_exchange_point = #{isExchangePoint}
		</if>
		<if test="isAllocatedStock != null">
			AND is_allocated_stock = #{isAllocatedStock}
		</if>
		<if test="hasExpired != null">
			<if test="hasExpired == true">
				 AND expire IS NOT NULL AND expire <![CDATA[ <= ]]> NOW()
			</if>
			<if test="hasExpired == false">
				AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW())
			</if>
		</if>
		<if test="beginDate != null">
				AND t.created_date <![CDATA[ >= ]]> #{beginDate}
		</if>
		<if test="beginDate != null">
			AND t.created_date <![CDATA[ <= ]]> #{endDate}
		</if>

	  ${ew.sqlSegment}

	</select>
	
	<!-- 查询订单数量 -->
	<select id="count" resultType="long">
		SELECT
			count(*)
		FROM 
			`orders` o
		<where>
			<if test="type != null">
				AND type = #{type.ordinal}
			</if>
			<if test="status != null" >
				AND `status` = #{status.ordinal}
			</if>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="member != null">
				AND member_id = #{member.id}
			</if>
			<if test="product != null">
				AND EXISTS (SELECT 1 FROM `order_item` WHERE orders = o.id AND sku_id IN (SELECT id FROM `sku` WHERE product_id = #{product.id}))
			</if>
			<if test="isPendingReceive != null">
				<if test="isPendingReceive == true">
					AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW()) 
					AND payment_method_type = 1
					AND status NOT IN (5, 6, 7, 8)
					AND amount_paid <![CDATA[ < ]]> amount 
				</if>
				<if test="isPendingReceive == false">
					AND NOT (AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW()) 
					AND payment_method_type = 1
					AND status NOT IN (5, 6, 7, 8)
					AND amount_paid <![CDATA[ < ]]> amount) 
				</if>
			</if>
			<if test="isPendingRefunds != null">
				<if test="isPendingRefunds == true">
					AND (
							(
								(
									expire IS NULL
									OR expire <![CDATA[ <= ]]> NOW()
									OR `status` IN (6 , 7 , 8)
								)
								AND amount_paid <![CDATA[ > ]]> amount
							)
							OR(`status` = 5 AND amount_paid <![CDATA[ > ]]> amount)
						)
				</if>
				<if test="isPendingRefunds == false">
					AND NOT (
								(
									(
										expire IS NULL
										OR expire <![CDATA[ <= ]]> NOW()
										OR `status` IN (6 , 7 , 8)
									)
									AND amount_paid <![CDATA[ > ]]> amount
								)
								OR(`status` = 5 AND amount_paid <![CDATA[ > ]]> amount)
							)
				</if>
			</if>
			<if test="isUseCouponCode != null">
				AND is_use_coupon_code = #{isUseCouponCode}
			</if>
			<if test="isExchangePoint != null">
				AND is_exchange_point = #{isExchangePoint}
			</if>
			<if test="isAllocatedStock != null">
				AND is_allocated_stock = #{isAllocatedStock}
			</if>
			<if test="hasExpired != null">
				<if test="hasExpired == true">
					 AND expire IS NOT NULL AND expire <![CDATA[ <= ]]> NOW()
				</if>
				<if test="hasExpired == false">
					AND (expire IS NULL OR expire <![CDATA[ > ]]> NOW())
				</if>
			</if>
		</where>
	</select>
	
	<!-- 查询订单创建数 -->
	<select id="createOrderCount" resultType="long">
		SELECT
			count(*)
		FROM 
			`orders`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="beginDate != null">
				AND created_date <![CDATA[ >= ]]> #{beginDate}
			</if>
			<if test="endDate != null">
				AND created_date <![CDATA[ <= ]]> #{endDate}
			</if>
		</where>
	</select>
	
	<!-- 查询订单完成数 -->
	<select id="completeOrderCount" resultType="long">
		SELECT
			count(*)
		FROM 
			`orders`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="beginDate != null">
				AND complete_date <![CDATA[ >= ]]> #{beginDate}
			</if>
			<if test="endDate != null">
				AND complete_date <![CDATA[ <= ]]> #{endDate}
			</if>
		</where>
	</select>
	
	<!-- 查询订单创建金额 -->
	<select id="createOrderAmount" resultType="long">
		SELECT
			sum(amount)
		FROM 
			`orders`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="beginDate != null">
				AND created_date <![CDATA[ >= ]]> #{beginDate}
			</if>
			<if test="endDate != null">
				AND created_date <![CDATA[ <= ]]> #{endDate}
			</if>
		</where>
	</select>
	
	<!-- 查询订单完成金额 -->
	<select id="createOrderAmount" resultType="long">
		SELECT
			sum(amount)
		FROM 
			`orders`
		<where>
			<if test="store != null">
				AND store_id = #{store.id}
			</if>
			<if test="beginDate != null">
				AND complete_date <![CDATA[ >= ]]> #{beginDate}
			</if>
			<if test="endDate != null">
				AND complete_date <![CDATA[ <= ]]> #{endDate}
			</if>
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.Order">
    	INSERT INTO orders (
			id ,
			created_date ,
			version ,
			address ,
			amount ,
			amount_paid ,
			area_name ,
			complete_date ,
			consignee ,
			coupon_discount ,
			exchange_point ,
			expire ,
			fee ,
			freight ,
			invoice_content ,
			invoice_title ,
			is_allocated_stock ,
			is_exchange_point ,
			is_use_coupon_code ,
			memo ,
			offset_amount ,
			payment_method_name ,
			payment_method_type ,
			phone ,
			price ,
			promotion_discount ,
			quantity ,
			refund_amount ,
			returned_quantity ,
			reward_point ,
			shipped_quantity ,
			shipping_method_name ,
			sn ,
			status ,
			tax ,
			type ,
			weight ,
			zip_code ,
			area_id ,
			coupon_code_id ,
			member_id ,
			payment_method_id ,
			shipping_method_id ,
			store_id ,
			promotion_names
		)
		VALUES (
			#{entity.id}, 
			NOW(), 
			#{entity.version}, 
			#{entity.address}, 
			#{entity.amount}, 
			#{entity.amountPaid}, 
			#{entity.areaName}, 
			#{entity.completeDate}, 
			#{entity.consignee}, 
			#{entity.couponDiscount}, 
			#{entity.exchangePoint}, 
			#{entity.expire}, 
			#{entity.fee}, 
			#{entity.freight}, 
			#{entity.invoice.content}, 
			#{entity.invoice.title}, 
			#{entity.isAllocatedStock}, 
			#{entity.isExchangePoint}, 
			#{entity.isUseCouponCode}, 
			#{entity.memo}, 
			#{entity.offsetAmount}, 
			#{entity.paymentMethodName}, 
			#{entity.paymentMethodType}, 
			#{entity.phone}, 
			#{entity.price}, 
			#{entity.promotionDiscount}, 
			#{entity.quantity}, 
			#{entity.refundAmount}, 
			#{entity.returnedQuantity}, 
			#{entity.rewardPoint}, 
			#{entity.shippedQuantity}, 
			#{entity.shippingMethodName}, 
			#{entity.sn}, 
			#{entity.status}, 
			#{entity.tax}, 
			#{entity.type}, 
			#{entity.weight}, 
			#{entity.zipCode}, 
			#{entity.area.id}, 
			#{entity.couponCode.id}, 
			#{entity.member.id}, 
			#{entity.paymentMethod.id}, 
			#{entity.shippingMethod.id}, 
			#{entity.store.id}, 
			#{entity.promotionNames, typeHandler=net.shopec.handlers.MyListTypeHandler}
		)
  	</insert>
	
	<!-- 更新 -->
	<update id="update" parameterType="net.shopec.entity.Order">
	    UPDATE orders
	    <set>
	        last_modified_date = NOW(),
	        version = #{entity.version} + 1,
	      <if test="entity.address != null">
	        address = #{entity.address},
	      </if>
	      <if test="entity.amount != null">
	        amount = #{entity.amount},
	      </if>
	      <if test="entity.amountPaid != null">
	        amount_paid = #{entity.amountPaid},
	      </if>
	      <if test="entity.areaName != null">
	        area_name = #{entity.areaName},
	      </if>
	      <if test="entity.completeDate != null">
	        complete_date = #{entity.completeDate},
	      </if>
	      <if test="entity.consignee != null">
	        consignee = #{entity.consignee},
	      </if>
	      <if test="entity.couponDiscount != null">
	        coupon_discount = #{entity.couponDiscount},
	      </if>
	      <if test="entity.exchangePoint != null">
	        exchange_point = #{entity.exchangePoint},
	      </if>
	      <if test="entity.expire != null">
	        expire = #{entity.expire},
	      </if>
	      <if test="entity.fee != null">
	        fee = #{entity.fee},
	      </if>
	      <if test="entity.freight != null">
	        freight = #{entity.freight},
	      </if>
	      <if test="entity.invoice != null">
	        invoice_content = #{entity.invoice.content},
	      </if>
	      <if test="entity.invoice != null">
	        invoice_title = #{entity.invoice.title},
	      </if>
	      <if test="entity.isAllocatedStock != null">
	        is_allocated_stock = #{entity.isAllocatedStock},
	      </if>
	      <if test="entity.isExchangePoint != null">
	        is_exchange_point = #{entity.isExchangePoint},
	      </if>
	      <if test="entity.isUseCouponCode != null">
	        is_use_coupon_code = #{entity.isUseCouponCode},
	      </if>
	      <if test="entity.memo != null">
	        memo = #{entity.memo},
	      </if>
	      <if test="entity.offsetAmount != null">
	        offset_amount = #{entity.offsetAmount},
	      </if>
	      <if test="entity.paymentMethodName != null">
	        payment_method_name = #{entity.paymentMethodName},
	      </if>
	      <if test="entity.paymentMethodType != null">
	        payment_method_type = #{entity.paymentMethodType},
	      </if>
	      <if test="entity.phone != null">
	        phone = #{entity.phone},
	      </if>
	      <if test="entity.price != null">
	        price = #{entity.price},
	      </if>
	      <if test="entity.promotionDiscount != null">
	        promotion_discount = #{entity.promotionDiscount},
	      </if>
	      <if test="entity.quantity != null">
	        quantity = #{entity.quantity},
	      </if>
	      <if test="entity.refundAmount != null">
	        refund_amount = #{entity.refundAmount},
	      </if>
	      <if test="entity.returnedQuantity != null">
	        returned_quantity = #{entity.returnedQuantity},
	      </if>
	      <if test="entity.rewardPoint != null">
	        reward_point = #{entity.rewardPoint},
	      </if>
	      <if test="entity.shippedQuantity != null">
	        shipped_quantity = #{entity.shippedQuantity},
	      </if>
	      <if test="entity.shippingMethodName != null">
	        shipping_method_name = #{entity.shippingMethodName},
	      </if>
	      <if test="entity.status != null">
	        status = #{entity.status},
	      </if>
	      <if test="entity.tax != null">
	        tax = #{entity.tax},
	      </if>
	      <if test="entity.type != null">
	        type = #{entity.type},
	      </if>
	      <if test="entity.weight != null">
	        weight = #{entity.weight},
	      </if>
	      <if test="entity.zipCode != null">
	        zip_code = #{entity.zipCode},
	      </if>
	      <if test="entity.area!= null">
	        area_id = #{entity.area.id},
	      </if>
	      <if test="entity.couponCode != null">
	        coupon_code_id = #{entity.couponCode.id},
	      </if>
	      <if test="entity.member != null">
	        member_id = #{entity.member.id},
	      </if>
	      <if test="entity.paymentMethod != null">
	        payment_method_id = #{entity.paymentMethod.id},
	      </if>
	      <if test="entity.shippingMethod != null">
	        shipping_method_id = #{entity.shippingMethod.id},
	      </if>
	      <if test="entity.store != null">
	        store_id = #{entity.store.id},
	      </if>
	      <if test="entity.promotionNames != null">
	        promotion_names = #{entity.promotionNames, typeHandler=net.shopec.handlers.MyListTypeHandler}
	      </if>
	    </set>
	   WHERE
			id = #{entity.id}
		AND version = #{entity.version}
	  </update>
	
</mapper>
