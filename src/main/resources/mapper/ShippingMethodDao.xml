<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.shopec.dao.ShippingMethodDao">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="net.shopec.entity.ShippingMethod">
	    <result column="id" property="id" />
	    <result column="version" property="version" />
        <result column="created_date" property="createdDate" />
        <result column="last_modified_date" property="lastModifiedDate" />
        <result column="orders" property="order" />
        <result column="description" property="description" />
        <result column="icon" property="icon" />
        <result column="name" property="name" />
        <association property="defaultDeliveryCorp" select="net.shopec.dao.DeliveryCorpDao.find" column="default_delivery_corp_id" javaType="net.shopec.entity.DeliveryCorp" fetchType="lazy"/>
        <collection property="paymentMethods" select="net.shopec.dao.PaymentMethodDao.findSet" column="{attributeName=shipping_method_id, attributeValue=id}" ofType="net.shopec.entity.PaymentMethod" fetchType="lazy"/>
        <collection property="defaultFreightConfigs" select="net.shopec.dao.DefaultFreightConfigDao.findSet" column="{attributeName=shipping_method_id, attributeValue=id}" ofType="net.shopec.entity.DefaultFreightConfig" fetchType="lazy"/>
        <collection property="areaFreightConfigs" select="net.shopec.dao.AreaFreightConfigDao.findSet" column="{attributeName=shipping_method_id, attributeValue=id}" ofType="net.shopec.entity.AreaFreightConfig" fetchType="lazy"/>
        <collection property="orders" select="net.shopec.dao.OrderDao.findSet" column="{attributeName=shipping_method_id, attributeValue=id}" ofType="net.shopec.entity.Order" fetchType="lazy"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
    	 id, version, created_date, last_modified_date, orders, description, icon, name, default_delivery_corp_id, 'shipping_method_id'
    </sql>
    
    <!-- 查找实体对象 -->
	<select id="find" parameterType="Long" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			shipping_method
		WHERE 
			id = #{id}
	</select>

	<!-- 查找实体对象集合 -->
	<select id="findSet" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			shipping_method
		<if test="attributeName == 'payment_method_id'">
			LEFT JOIN shipping_method_payment_method ON id = shipping_methods_id
			WHERE
				payment_methods_id = #{attributeValue}
		</if>
		<if test="attributeName != 'payment_method_id'">
			WHERE
				${attributeName} = #{attributeValue}
		</if>
	</select>
	
	<!-- 查找所有实体对象集合 -->
	<select id="findAll" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			`shipping_method` 
	</select>
	
	<!-- 查找实体对象分页 -->
	<select id="selectPage" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			shipping_method
		<where>
			${ew.sqlSegment}
		</where>
	</select>
	
	<!-- 保存 -->
	<insert id="save" parameterType="net.shopec.entity.ShippingMethod">
   		INSERT INTO shipping_method(
			id ,
			created_date ,
			version ,
			orders ,
			description ,
			icon ,
			name ,
			default_delivery_corp_id
		)
		VALUES (
			#{entity.id}, 
			#{entity.createdDate},
			#{entity.version}, 
			#{entity.order}, 
			#{entity.description}, 
			#{entity.icon}, 
			#{entity.name}, 
			#{entity.defaultDeliveryCorp.id}
		)
  	</insert>
  	
  	<!-- 更新 -->
  	<update id="update" parameterType="net.shopec.entity.ShippingMethod">
    	UPDATE shipping_method
		SET last_modified_date = #{entity.lastModifiedDate},
			version = #{entity.version} + 1,
			orders = #{entity.order},
			description = #{entity.description},
			icon = #{entity.icon},
			name = #{entity.name},
			default_delivery_corp_id = #{entity.defaultDeliveryCorp.id}
		WHERE
			id = #{entity.id}
		AND version = #{entity.version}
  	</update>
  
</mapper>
